<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oRandroom</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Level generation

event_inherited();

if exitSide = 0
{
    scrLevelGenR(tileAmount, c_blue);
}
else if exitSide = 1
{
    scrLevelGen(tileAmount, c_blue);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Settings

/*
if (random(20) &lt; 8)
{
    instance_create (irandom(room_width), room_height - 64, oEnemyDisc)
}
*/

// Deactivate objects outside of the view
instance_deactivate_region(0, 0, room_width, room_height, false, true);
instance_activate_region(view_xview[0], 0, view_wview[0], room_height, true);


// The view follows the player if they go off the bottom of the screen, but does not scroll.
if instance_exists(oPlayerPerson) == true
{
    view_yview[0] = oPlayerPerson.y - oPlayerPerson.y%768;
    if oPlayerPerson.x &lt; (view_wview / 2) + 64
    {
        view_xview = 64;
    }
    else if oPlayerPerson.x &lt; (room_width - view_wview/2 - 64)
    {
        view_xview = oPlayerPerson.x - view_wview / 2;
    }
    else
    {
        view_xview = room_width - view_wview - 64;
    }
    
    if exitSide = 0
    {
        if oPlayerPerson.x &gt; room_width - 32
        {
            room_goto(rEntry);
        }
        if oPlayerPerson.x &lt; 32
        {
            room_goto(rPit);
        }
    }
    
    else if exitSide = 1
    {
        if oPlayerPerson.x &gt; room_width - 32
        {
            room_goto(rPit);
        }
        if oPlayerPerson.x &lt; 32
        {
            room_goto(rEntry);
        }
    }
    /*
    if oPlayerPerson.x &lt; view_wview / 2 + 64
    {
        view_xview[0] = 0;
    }
    if oPlayerPerson.x &lt; view_wview * 3 + 64
    {
        view_xview[0] = oPlayerPerson.x - view_xview / 2;
    }
    else
    {
        view_xview[0] = view_xview * 3;
    }
    */
}

// Respawn the player at the top if they go off the map.
if instance_exists(oPlayerPerson) == false
{
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
