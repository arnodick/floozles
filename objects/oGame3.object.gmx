<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Level generation
last = 0;
blockCount = 0;
emptyCount = 0;
rand = 0;
playerCreated = false;

tileArray[0] = bTileR;
tileArray[1] = bTileR;
tileArray[2] = bTileR;

//tileArray[0] = bTile0;
//tileArray[1] = bTile1;
//tileArray[2] = bTile2;


// Checks every incremement through 0 - 17 to either make a block at or leave blank the coordinate at i times 64.
for (i = 1; i &lt; 18; i += 1)
{
    rand = irandom(1);
    // If no block is being created at this X coordinate, but a block was made one column to the left of this X coord, then put a single block tile one column back.
    if rand == 0 and blockCount == 1
    {
        tile_add (bTileR, 0, 0, 64, 64, i * 64 - 64, 512, 1000000);
        tile_add (bTileRE, 0, 0, 64, 64, i * 64, 512, 1000000);
        tile_add (bTileRET, 0, 0, 64, 64, i * 64, 448, 1000000);
        tile_add (bTileLE, 0, 0, 64, 64, i * 64 - 128, 512, 1000000);
        tile_add (bTileLT, 0, 0, 64, 64, i * 64 - 64, 448, 1000000);
    }
    // If a block is beaing created at this X coordinate
    else if rand == 1 and blockCount == 1
    {
        tile_add (bTileL, 0, 0, 64, 64, i * 64 - 64, 512, 1000000);
        tile_add (bTileLE, 0, 0, 64, 64, i * 64 - 128, 512, 1000000);
        tile_add (bTileLT, 0, 0, 64, 64, i * 64 - 64, 448, 1000000);
    }
    else if blockCount == 2
    {
        tile_add (bTileR, 0, 0, 64, 64, i * 64 - 64, 512, 1000000);
        tile_add (bTileRE, 0, 0, 64, 64, i * 64, 512, 1000000);
        tile_add (bTileRT, 0, 0, 64, 64, i * 64 - 64, 448, 1000000);
        tile_add (bTileRET, 0, 0, 64, 64, i * 64, 448, 1000000);     
    }
    if rand == 1 and blockCount &lt; 2
    {
        if playerCreated = false
        {
            instance_create (i * 64, 0, oPlayerPerson);
            playerCreated = true;
        }
        instance_create (i * 64, 512, oWall);
        blockCount += 1;
        emptyCount = 0;
    }
    else if emptyCount &lt; 2
    {
        blockCount = 0;
        emptyCount += 1;
    }
    else
    {
        instance_create (i * 64, 512, oWall);
        //tile_add (bTileL, 0, 0, 64, 64, i * 64, 512, 1000000);
        //tile_add (bTileLE, 0, 0, 64, 64, i * 64 - 64, 512, 1000000);
        //tile_add (bTileLT, 0, 0, 64, 64, i * 64, 448, 1000000);
        //tile_add (tileArray[irandom(2)], 0, 0, 64, 64, i * 64, 512, 1000000);
        blockCount = 1;
        emptyCount = 0;
        if playerCreated = false
        {
            instance_create (i * 64, 0, oPlayerPerson);
            playerCreated = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Settings

/*
if (random(20) &lt; 8)
{
    instance_create (irandom(room_width), room_height - 64, oEnemyDisc)
}
*/

// Deactivate objects outside of the view
instance_deactivate_region(0, 0, room_width, room_height, false, true);
instance_activate_region(view_xview[0], 0, view_wview[0], room_height, true);

// The view follows the player if they go off the bottom of the screen, but does not scroll.
if instance_exists(oPlayerPerson) == true
{
    view_yview[0] = oPlayerPerson.y - oPlayerPerson.y%768;
    if oPlayerPerson.x &gt; room_width - 64
    {
        room_goto(rScroll);
    }
}

// Respawn the player at the top if they go off the map.
if instance_exists(oPlayerPerson) == false
{
    room_restart();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
